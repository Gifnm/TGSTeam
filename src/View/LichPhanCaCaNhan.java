/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View;

import DAO.CaLamViecCTDAO;
import Model.CaLamViecCT;
import com.edysys.utils.Auth;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ASUS
 */
public class LichPhanCaCaNhan extends javax.swing.JFrame {

    private List<CaLamViecCT> danSachCaLamViec = new ArrayList<>();
    DefaultTableModel model = new DefaultTableModel();

    /**
     * Creates new form LichPhanCaCaNhan
     */
    public LichPhanCaCaNhan() throws ParseException {
        initComponents();
        model = (DefaultTableModel) jtbLichPhanCaCaNhan.getModel();
        jtbLichPhanCaCaNhan.setModel(model);
        fillToTbale();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jtbLichPhanCaCaNhan = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jtbLichPhanCaCaNhan.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jtbLichPhanCaCaNhan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Ng√†y", "Ca1 (7h - 12h)", "Ca2 (12h - 14h)", "Ca3 (14 - 16h)", "Ca4 (16h -18h)", "Ca5 (18h - 21h)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtbLichPhanCaCaNhan.setRowHeight(20);
        jScrollPane1.setViewportView(jtbLichPhanCaCaNhan);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 58, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LichPhanCaCaNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LichPhanCaCaNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LichPhanCaCaNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LichPhanCaCaNhan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new LichPhanCaCaNhan().setVisible(true);
                } catch (ParseException ex) {
                    Logger.getLogger(LichPhanCaCaNhan.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtbLichPhanCaCaNhan;
    // End of variables declaration//GEN-END:variables
CaLamViecCTDAO calvCTDAO = new CaLamViecCTDAO();

   public static String getNextDate(String  curDate) {
       String s ="";
        try {
            final SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            final Date date = format.parse(curDate);
            final Calendar calendar = Calendar.getInstance();
            calendar.setTime(date);
            calendar.add(Calendar.DAY_OF_YEAR, 1); 
            s=  format.format(calendar.getTime());
        } catch (ParseException ex) {
            Logger.getLogger(LichPhanCaCaNhan.class.getName()).log(Level.SEVERE, null, ex);
        }
        return s;
}
    
    public String LayNgay() {
        DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        Calendar cal = Calendar.getInstance();
        String timeNow = dateFormat.format(cal.getTime());
        return timeNow;
    }

    public void fillToTbale() throws ParseException {
        String nextday = LayNgay();
       
        model.setRowCount(0);
        for (int i = 0; i < 7; i++) {
           
         CaLamViecCT caLamViecCT = new CaLamViecCT();
            model.addRow(new Object[]{nextday, calvCTDAO.KiemTraCaLam(nextday, "CA1", Auth.user.getMaNV()), calvCTDAO.KiemTraCaLam(nextday, "CA2", Auth.user.getMaNV()), calvCTDAO.KiemTraCaLam(nextday, "CA3", Auth.user.getMaNV()), calvCTDAO.KiemTraCaLam(nextday, "CA4", Auth.user.getMaNV()), calvCTDAO.KiemTraCaLam(nextday, "CA5", Auth.user.getMaNV())});
                              nextday = getNextDate(nextday);

        }
    }
}
